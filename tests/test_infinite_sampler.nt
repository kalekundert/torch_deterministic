test_infinite_sampler:
  -
    id: baseline
    sampler: InfiniteSampler(2)
    expected_len: 2
    expected_iter:
      - 0, 1
      - 2, 3
  -
    id: start-epoch
    sampler:
      > InfiniteSampler(
      >     epoch_size=2,
      >     start_epoch=1,
      >     increment_across_epochs=False,
      > )
    expected_len: 2
    expected_iter:
      - 2, 3
      - 2, 3
  -
    id: increment-across-epochs
    sampler: InfiniteSampler(2, increment_across_epochs=False)
    expected_len: 2
    expected_iter:
      - 0, 1
      - 0, 1
  -
    id: shuffle
    sampler: InfiniteSampler(5, shuffle=True)
    expected_len: 5
    # The order of these sequences is pseudo-random.  I got these expected 
    # values by simply running the program once and seeing what it produced, 
    # not by prdicting the output a priori.  Note that this test has a bigger 
    # epoch size than the others.  The purpose of this is to avoid getting a 
    # random sequence that happens to be the same as the input sequence.
    expected_iter:
      - 2, 4, 3, 0, 1
      - 9, 5, 6, 7, 8
  -
    id: shuffle-size-3
    sampler: InfiniteSampler(5, shuffle=True, shuffle_size=3)
    expected_len: 5
    expected_iter:
      - 2, 0, 1, 3, 4
      - 5, 8, 6, 7, 11
  -
    id: shuffle-size-7
    sampler: InfiniteSampler(5, shuffle=True, shuffle_size=7)
    expected_len: 5
    expected_iter:
      - 2, 4, 3, 6, 5
      - 0, 1, 12, 7, 8
  -
    id: shuffle-no-increment
    sampler: InfiniteSampler(5, shuffle=True, increment_across_epochs=False)
    expected_len: 5
    expected_iter:
      - 2, 4, 3, 0, 1
      - 2, 4, 3, 0, 1
  -
    id: distributed-rank-0
    # Use a batch size (5) that doesn't even divide between the number of 
    # processes (2), to make sure that extra items are dropped.
    sampler: InfiniteSampler(5, world_size=2, rank=0)
    expected_len: 2
    expected_iter:
      - 0, 2
      - 5, 7
  -
    id: distributed-rank-1
    sampler: InfiniteSampler(5, world_size=2, rank=1)
    expected_len: 2
    expected_iter:
      - 1, 3
      - 6, 8
